{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => history.push(\"/login\")) // re-direct to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/users/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    // Set token to Auth header\n    setAuthToken(token);\n    // Decode token to get user data\n    const decoded = jwt_decode(token);\n    // Set current user\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"sources":["C:/Users/mcard/OneDrive/Desktop/mern-auth/client/src/actions/authActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then((res) => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING,\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => (dispatch) => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;AACpE;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAQ,EAAEC,OAAO,KAAMC,QAAQ,IAAK;EAC/DT,KAAK,CACFU,IAAI,CAAC,qBAAqB,EAAEH,QAAQ,CAAC,CACrCI,IAAI,CAAEC,GAAG,IAAKJ,OAAO,CAACK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAAA,CACtCC,KAAK,CAAEC,GAAG,IACTN,QAAQ,CAAC;IACPO,IAAI,EAAEb,UAAU;IAChBc,OAAO,EAAEF,GAAG,CAACG,QAAQ,CAACC;EACxB,CAAC,CAAC,CACH;AACL,CAAC;AACD;AACA,OAAO,MAAMC,SAAS,GAAIb,QAAQ,IAAME,QAAQ,IAAK;EACnDT,KAAK,CACFU,IAAI,CAAC,kBAAkB,EAAEH,QAAQ,CAAC,CAClCI,IAAI,CAAEC,GAAG,IAAK;IACb;IACA;IACA,MAAM;MAAES;IAAM,CAAC,GAAGT,GAAG,CAACO,IAAI;IAC1BG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;IACvC;IACApB,YAAY,CAACoB,KAAK,CAAC;IACnB;IACA,MAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAK,CAAC;IACjC;IACAZ,QAAQ,CAACgB,cAAc,CAACD,OAAO,CAAC,CAAC;EACnC,CAAC,CAAC,CACDV,KAAK,CAAEC,GAAG,IACTN,QAAQ,CAAC;IACPO,IAAI,EAAEb,UAAU;IAChBc,OAAO,EAAEF,GAAG,CAACG,QAAQ,CAACC;EACxB,CAAC,CAAC,CACH;AACL,CAAC;AACD;AACA,OAAO,MAAMM,cAAc,GAAID,OAAO,IAAK;EACzC,OAAO;IACLR,IAAI,EAAEZ,gBAAgB;IACtBa,OAAO,EAAEO;EACX,CAAC;AACH,CAAC;AACD;AACA,OAAO,MAAME,cAAc,GAAG,MAAM;EAClC,OAAO;IACLV,IAAI,EAAEX;EACR,CAAC;AACH,CAAC;AACD;AACA,OAAO,MAAMsB,UAAU,GAAG,MAAOlB,QAAQ,IAAK;EAC5C;EACAa,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;EACnC;EACA3B,YAAY,CAAC,KAAK,CAAC;EACnB;EACAQ,QAAQ,CAACgB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}